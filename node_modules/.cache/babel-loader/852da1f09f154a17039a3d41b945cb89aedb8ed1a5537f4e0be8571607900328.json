{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\OneDrive\\\\Documentos\\\\FACULDADE\\\\Projetos\\\\Restaurante_UFSCar\\\\Restaurante-UFSCar-front\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/pages/Login.js\nimport React, { useState } from 'react';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState({\n    username: '',\n    senha: '',\n    confirmarSenha: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (isSignup) {\n      // Validação simples para cadastro: as senhas devem coincidir\n      if (formData.senha !== formData.confirmarSenha) {\n        setErrorMessage('As senhas não conferem!');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:3000/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          // No cadastro, envia apenas username e senha; role será definido como \"client\"\n          body: JSON.stringify({\n            username: formData.username,\n            password: formData.senha,\n            role: 'client'\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          setErrorMessage(errorData.error || 'Erro ao cadastrar usuário');\n          return;\n        }\n        // Cadastro realizado com sucesso; exibe mensagem e retorna ao modo login\n        setSuccessMessage('Cadastro realizado com sucesso! Por favor, faça login.');\n        setIsSignup(false);\n        setFormData({\n          username: '',\n          senha: '',\n          confirmarSenha: ''\n        });\n      } catch (err) {\n        console.error(err);\n        setErrorMessage('Erro na conexão com o servidor');\n      }\n    } else {\n      try {\n        const response = await fetch('http://localhost:3000/users/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          // O login utiliza apenas username e senha\n          body: JSON.stringify({\n            username: formData.username,\n            password: formData.senha\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          setErrorMessage(errorData.message || 'Login falhou!');\n          return;\n        }\n        const data = await response.json();\n        // Verifica o role retornado para direcionar o usuário\n        if (data.user.role === 'admin') {\n          localStorage.setItem('username', data.user.username); // Salva o username no LocalStorage\n          onLogin({\n            loggedIn: true,\n            role: 'admin'\n          });\n        } else {\n          localStorage.setItem('username', data.user.username); // Salva o username no LocalStorage\n          onLogin({\n            loggedIn: true,\n            role: 'client'\n          });\n        }\n      } catch (error) {\n        console.error('Erro no login:', error);\n        setErrorMessage('Erro ao fazer login. Tente novamente.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? 'Cadastro' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"senha\",\n        placeholder: \"Senha\",\n        value: formData.senha,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), isSignup && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmarSenha\",\n        placeholder: \"Confirmar Senha\",\n        value: formData.confirmarSenha,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: isSignup ? 'Cadastrar' : 'Entrar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-link\",\n        children: isSignup ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setIsSignup(false);\n            setErrorMessage('');\n            setSuccessMessage('');\n          },\n          children: \"J\\xE1 possui cadastro? Fa\\xE7a login.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setIsSignup(true);\n            setErrorMessage('');\n            setSuccessMessage('');\n          },\n          children: \"N\\xE3o possui cadastro? Cadastre-se.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Q2cljp00ePdGN3ehVYuFlQcgW88=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","isSignup","setIsSignup","formData","setFormData","username","senha","confirmarSenha","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","role","ok","errorData","json","error","err","console","message","data","user","localStorage","setItem","loggedIn","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mateu/OneDrive/Documentos/FACULDADE/Projetos/Restaurante_UFSCar/Restaurante-UFSCar-front/src/pages/Login.js"],"sourcesContent":["// src/components/pages/Login.js\r\nimport React, { useState } from 'react';\r\nimport '../styles/Login.css';\r\n\r\nfunction Login({ onLogin }) {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    senha: '',\r\n    confirmarSenha: '',\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    if (isSignup) {\r\n      // Validação simples para cadastro: as senhas devem coincidir\r\n      if (formData.senha !== formData.confirmarSenha) {\r\n        setErrorMessage('As senhas não conferem!');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch('http://localhost:3000/users/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          // No cadastro, envia apenas username e senha; role será definido como \"client\"\r\n          body: JSON.stringify({\r\n            username: formData.username,\r\n            password: formData.senha,\r\n            role: 'client'\r\n          }),\r\n        });\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          setErrorMessage(errorData.error || 'Erro ao cadastrar usuário');\r\n          return;\r\n        }\r\n        // Cadastro realizado com sucesso; exibe mensagem e retorna ao modo login\r\n        setSuccessMessage('Cadastro realizado com sucesso! Por favor, faça login.');\r\n        setIsSignup(false);\r\n        setFormData({ username: '', senha: '', confirmarSenha: '' });\r\n      } catch (err) {\r\n        console.error(err);\r\n        setErrorMessage('Erro na conexão com o servidor');\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/users/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          // O login utiliza apenas username e senha\r\n          body: JSON.stringify({\r\n            username: formData.username,\r\n            password: formData.senha,\r\n          }),\r\n        });\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          setErrorMessage(errorData.message || 'Login falhou!');\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        // Verifica o role retornado para direcionar o usuário\r\n        if (data.user.role === 'admin') {\r\n          localStorage.setItem('username', data.user.username); // Salva o username no LocalStorage\r\n          onLogin({ loggedIn: true, role: 'admin' });\r\n        } else {\r\n          localStorage.setItem('username', data.user.username); // Salva o username no LocalStorage\r\n          onLogin({ loggedIn: true, role: 'client' });\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro no login:', error);\r\n        setErrorMessage('Erro ao fazer login. Tente novamente.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2>{isSignup ? 'Cadastro' : 'Login'}</h2>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Nome de usuário\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"senha\"\r\n          placeholder=\"Senha\"\r\n          value={formData.senha}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {isSignup && (\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmarSenha\"\r\n            placeholder=\"Confirmar Senha\"\r\n            value={formData.confirmarSenha}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        )}\r\n        <button type=\"submit\" className=\"login-button\">\r\n          {isSignup ? 'Cadastrar' : 'Entrar'}\r\n        </button>\r\n        <div className=\"toggle-link\">\r\n          {isSignup ? (\r\n            <span onClick={() => {\r\n              setIsSignup(false);\r\n              setErrorMessage('');\r\n              setSuccessMessage('');\r\n            }}>\r\n              Já possui cadastro? Faça login.\r\n            </span>\r\n          ) : (\r\n            <span onClick={() => {\r\n              setIsSignup(true);\r\n              setErrorMessage('');\r\n              setSuccessMessage('');\r\n            }}>\r\n              Não possui cadastro? Cadastre-se.\r\n            </span>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}